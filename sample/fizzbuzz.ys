#!/usr/bin/env ys-0

# This program has multiple implementations of "fizzbuzz".

# usage: yamlscript fizzbuzz.ys [<count>] [<fizzbuzz-fn-#>]

# The main function runs a certain requested fizzbuzz implementation function
# for a certain requested number (default is 100).

defn main(count=100, impl="1"):
  fizzbuzz =: "fizzbuzz-$impl"

  when-not getenv("YAMLSCRIPT_TEST"):
    say: "Running function '$fizzbuzz' with count=$count"

  function =: resolve(symbol(fizzbuzz))
  result   =: function(number(count))

  map(say): result

# These implementation functions were adapted from
# https://rosettacode.org/wiki/FizzBuzz#Clojure

defn fizzbuzz-1(n):
  map @:
    fn(x):
      cond @:
        zero?(x % 15) : "FizzBuzz"
        zero?(x % 5)  : "Buzz"
        zero?(x % 3)  : "Fizz"
        :else: x
    =>: (1 .. n)


defn fizzbuzz-2(n):
  loop [i 1, l []]:
    if (i > n): l
    else:
      recur:
        inc: i
        conj l:
          cond:
            zero?(mod(i 15)) : "FizzBuzz"
            zero?(mod(i 5))  : "Buzz"
            zero?(mod(i 3))  : "Fizz"
            :else: i


defn fizzbuzz-3(n):
  map:
    fn(x):
      if empty?(s):
        =>: x
      else:
        str:
          when (zero? mod(x 3)): "Fizz"
          when (zero? mod(x 5)): "Buzz"
    range: 1, n++
